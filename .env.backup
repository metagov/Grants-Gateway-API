# =============================================================================
# OpenGrants Gateway API - Environment Configuration
# =============================================================================

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION (REQUIRED)
# -----------------------------------------------------------------------------
# PostgreSQL connection string
# Local example: postgresql://username:password@localhost:5432/grants_gateway
# Neon example: postgresql://username:password@ep-xxx.us-east-1.aws.neon.tech/grants_gateway
DATABASE_URL="postgresql://username:password@localhost:5432/grants_gateway"

# -----------------------------------------------------------------------------
# SERVER CONFIGURATION
# -----------------------------------------------------------------------------
# Node environment (development or production)
NODE_ENV=development
PORT=5000

# Session secret for authentication (generate a random string)
SESSION_SECRET="your-super-secret-session-key-change-this-in-production"

# Frontend URL for CORS configuration (in production)
FRONTEND_URL="http://localhost:5000"

# -----------------------------------------------------------------------------
# EXTERNAL API CONFIGURATION (Optional - defaults provided)
# -----------------------------------------------------------------------------
# OpenGrants API (for Octant, Giveth)
OPENGRANTS_API_URL="https://grants.daostar.org/api/v1"

# DAOIP-5 Static Files (for Stellar, Celo, etc.)
DAOIP5_API_URL="https://daoip5.daostar.org"

# Individual system APIs (optional overrides)
OCTANT_API_URL="https://backend.mainnet.octant.app"
GIVETH_API_URL="https://mainnet.serve.giveth.io/graphql"
QUESTBOOK_API_URL="https://api.questbook.app"

# -----------------------------------------------------------------------------
# API KEYS (Optional - for rate limiting bypass and enhanced features)
# -----------------------------------------------------------------------------
# CoinGecko API key for historical price data
COINGECKO_API_KEY=""

# Karma API key for reputation data
KARMA_API_KEY=""

# GitHub token for accessing repository data
GITHUB_TOKEN=""

# -----------------------------------------------------------------------------
# PERFORMANCE & CACHING CONFIGURATION
# -----------------------------------------------------------------------------
# Rate limiting (requests per hour)
DEFAULT_RATE_LIMIT=1000

# Cache settings
CACHE_TTL_MINUTES=15
BACKGROUND_REFRESH_INTERVAL_HOURS=6

# Data refresh intervals
ECOSYSTEM_STATS_REFRESH_MINUTES=5
SYSTEM_DATA_REFRESH_MINUTES=15
PRICE_DATA_REFRESH_MINUTES=60

# -----------------------------------------------------------------------------
# FEATURE FLAGS (Optional)
# -----------------------------------------------------------------------------
# Enable/disable specific features
ENABLE_HISTORICAL_PRICES=true
ENABLE_BIGQUERY_INTEGRATION=false
ENABLE_DATA_VALIDATION=true
ENABLE_CORS_PROXY=true

# Debug settings
DEBUG_API_CALLS=false
LOG_LEVEL="info"

# -----------------------------------------------------------------------------
# BIGQUERY CONFIGURATION (Optional - for Phase 3)
# -----------------------------------------------------------------------------
# GOOGLE_CLOUD_PROJECT_ID=""
# GOOGLE_CLOUD_DATASET_ID="grants_analytics"
# GOOGLE_APPLICATION_CREDENTIALS="path/to/service-account.json"

# -----------------------------------------------------------------------------
# MONITORING & ALERTS (Optional)
# -----------------------------------------------------------------------------
# SENTRY_DSN=""
# DATADOG_API_KEY=""
# SLACK_WEBHOOK_URL=""
